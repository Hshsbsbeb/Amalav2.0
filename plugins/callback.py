## ¬©copyright infringement on Telugu Coders

from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from pyrogram import Client, filters          
import asyncio
from pytgcalls import PyTgCalls
from pytgcalls.types import Update
from pytgcalls import StreamType
from pytgcalls.types.input_stream import InputStream
from pytgcalls.types.input_stream import InputAudioStream
from modules.clientbot import clientbot
from modules.config import GROUP, NETWORK, BOT_USERNAME

## don't change any value in this repo if you change the value bot will crash your heroku accounts. 


@Client.on_callback_query(filters.regex("home_start"))
async def start_set(_, query: CallbackQuery):
    await query.edit_message_text(
        f"""üëãüèª ** ú·¥á ü ü·¥è {query.message.from_user.mention()} …™·¥Ä·¥ç ·¥Ä ·¥õ·¥á·¥Ä·¥ç s ú·¥Ä·¥Ö·¥è·¥° ·¥ç·¥ús…™·¥Ñ  ô·¥è·¥õ …™·¥Ä·¥ç ·¥ò ü·¥Ä è ·¥ç·¥ús…™·¥Ñ …™…¥ ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç.. 

…¢ Ä·¥è·¥ú·¥òs ·¥°…™·¥õ ú s·¥è·¥ç·¥á ·¥ús·¥á“ì·¥ú ü “ì·¥á·¥Ä·¥õ·¥ú Ä·¥ás.. ·¥Ä…¥ è  ú·¥á ü·¥ò  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ  ú…™·¥õ ·¥õ ú·¥á  ú·¥á ü·¥ò ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö /help..

·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è : [·¥õ·¥á ü·¥ú…¢·¥ú ·¥Ñ·¥è·¥Ö·¥á Äs](https://t.me/tgshadow_fighters) !**
""", 
    reply_markup=InlineKeyboardMarkup( [[
            InlineKeyboardButton("üìö  ú·¥á ü·¥ò & ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös", callback_data="command_list"), 
            ],[
            InlineKeyboardButton("üí¨ …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥", callback_data="info"), 
            ],[
            InlineKeyboardButton("üçÉ s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url=f"https://t.me/{GROUP}"), 
            InlineKeyboardButton("üì° ·¥Ñ ú·¥Ä…¥…¥·¥á ü", url=f"https://t.me/{NETWORK}"), 
            ],[
            InlineKeyboardButton("üçÄ ·¥Ä·¥Ö·¥Ö ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò üçÄ", url=f"https://t.me/{BOT_USERNAME}?startgroup=true")
            ]]
            ) 
        ) 
   

@Client.on_callback_query(filters.regex("command_list"))
async def commands_set(_, query: CallbackQuery):
    await query.answer("opening command list", show_alert=True) 
    await query.edit_message_text(
        f"""üíó  ú·¥á ü ü·¥è [{query.message.chat.first_name}](tg://user?id={query.message.chat.id}) 
‚û†  ú·¥á ü ü·¥è …¥·¥Ä·¥çs·¥õ ú·¥á ·¥Ä…¥…¥·¥Ä ·¥õ ú…™s …™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö  ü…™s·¥õ …¢·¥ú…™·¥Ö·¥á ·¥° ú·¥Ä·¥õ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö  è·¥è·¥ú …¥·¥á·¥Ö·¥Ö s·¥á ü·¥á·¥Ñ·¥õ  ú·¥á Ä·¥á.. 

‚û† ·¥õ ú…™s  ô·¥è·¥õ ·¥ç·¥Ä·¥Ö·¥á ·¥Ä…¥·¥Ö ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á·¥Ö  ô è [·¥õ·¥á ü·¥ú…¢·¥ú ·¥Ñ·¥è·¥Ö·¥á Äs](https://t.me/tgshadow_fighters) 
""", 
    reply_markup=InlineKeyboardMarkup( [[
            InlineKeyboardButton("üìö…¢·¥á…¥·¥á Ä·¥Ä ü ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös", callback_data="general_list"), 
            ],[
            InlineKeyboardButton("s·¥ã…™·¥ò", callback_data="skip_list"), 
            InlineKeyboardButton("·¥ò·¥Ä·¥ús·¥á", callback_data="pause_list"), 
            ],[
            InlineKeyboardButton(" Ä·¥ás·¥ú·¥ç·¥á", callback_data="resume_list"), 
            InlineKeyboardButton("s·¥õ·¥è·¥ò", callback_data="stop_list"), 
            ],[
            InlineKeyboardButton("·¥ò ü·¥Ä è", callback_data="play_list"), 
            InlineKeyboardButton("s·¥è·¥ú Ä·¥Ñ·¥á", callback_data="source"), 
            ],[
            InlineKeyboardButton("‚óÅ", callback_data="home_start"), 
            ]]
            ) 
        ) 
    

@Client.on_callback_query(filters.regex("general_list"))
async def general_list(_, query: CallbackQuery):
    await query.edit_message_text(
        f"""üçÄ  ú·¥á ü ü·¥è [{query.message.chat.first_name}](tg://user?id={query.message.chat.id}) !

‚û†  play (s·¥è…¥…¢ …¥·¥Ä·¥ç·¥á/ ü…™…¥·¥ã)  …¥·¥è·¥õ /·¥ò ü·¥Ä è - ·¥ò ü·¥Ä è ·¥ç·¥ús…™·¥Ñ ·¥è…¥ ·¥†…™·¥Ö·¥á·¥è ·¥Ñ ú·¥Ä·¥õ\n
‚û† /song («´·¥ú·¥á Ä è) - ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö s·¥è…¥…¢ “ì Ä·¥è·¥ç  è·¥è·¥ú·¥õ·¥ú ô·¥á\n
‚û† /search («´·¥ú·¥á Ä è) - s·¥á·¥Ä Ä·¥Ñ ú ·¥Ä  è·¥è·¥ú·¥õ·¥ú ô·¥á ·¥†…™·¥Ö·¥á·¥è  ü…™…¥·¥ã\n
‚û† /ping - s ú·¥è·¥° ·¥õ ú·¥á  ô·¥è·¥õ ·¥ò…™…¥…¢ s·¥õ·¥Ä·¥õ·¥ús\n
‚û† /uptime - s ú·¥è·¥° ·¥õ ú·¥á  ô·¥è·¥õ ·¥ú·¥ò·¥õ…™·¥ç·¥á s·¥õ·¥Ä·¥õ·¥ús\n
‚û† /alive - s ú·¥è·¥° ·¥õ ú·¥á  ô·¥è·¥õ ·¥Ä ü…™·¥†·¥á …™…¥“ì·¥è (…™…¥ …¢ Ä·¥è·¥ú·¥ò ·¥è…¥ ü è)\n
‚û† /help - ·¥õ·¥è s ú·¥è·¥°  ú·¥á ü·¥ò ·¥ç·¥áss·¥Ä…¢·¥á (“ì·¥ú ü ü  ô·¥è·¥õ …¢·¥ú…™·¥Ö·¥á)\n
‚û† ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è : [·¥õ·¥á ü·¥ú…¢·¥ú ·¥Ñ·¥è·¥Ö·¥á Äs](https://t.me/tgshadow_fighters) """,
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "‚óÅ", callback_data="command_list")
                ]
            ]
        ),
    )


@Client.on_callback_query(filters.regex("skip_list"))
async def skip_list(_, query: CallbackQuery): 
    await query.edit_message_text(
        f"""üëãüèª  ú·¥á ü ü·¥è [{query.message.chat.first_name}](tg://user?id={query.message.chat.id}) !

‚û† **/skip ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö “ì·¥è Ä s·¥ú·¥ò·¥á Ä …¢ Ä·¥è·¥ú·¥òs “ì·¥è Ä s·¥ã…™·¥ò ·¥õ·¥è …¥·¥áx·¥õ s·¥è…¥…¢ …™…¥ ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç …¢ Ä·¥è·¥ú·¥òs/n·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥è…¥ ü è ·¥ç·¥Ä·¥Ö·¥á “ì·¥è Ä ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ä…¥·¥Ö  ô·¥è·¥õ ·¥Ñ Ä·¥á·¥Ä·¥õ·¥è Ä's..**

‚û† **·¥Ö·¥ás…™…¢…¥·¥á·¥Ö ·¥Ä…¥·¥Ö ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á·¥Ö  ô è [·¥õ·¥á ü·¥ú…¢·¥ú ·¥Ñ·¥è·¥Ö·¥á Äs](https://t.me/teamshadowprojects)**""", 
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "‚óÅ", callback_data="command_list")
                ]
            ]
        ),
    )


@Client.on_callback_query(filters.regex("pause_list"))
async def pause_list(_, query: CallbackQuery):
    await query.edit_message_text(
        f"""üíò  ú·¥á ü ü·¥è [{query.message.chat.first_name}](tg://user?id={query.message.chat.id}) !
‚û† **/pause ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö “ì·¥è Ä s·¥ú·¥ò·¥á Ä …¢ Ä·¥è·¥ú·¥òs “ì·¥è Ä ·¥ò·¥Ä·¥ús·¥á ·¥õ ú·¥á ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ·¥ò ü·¥Ä è…™…¥…¢ s·¥è…¥…¢ …™…¥ …¢ Ä·¥è·¥ú·¥ò/n·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥è…¥ ü è ·¥ç·¥Ä·¥Ö·¥á “ì·¥è Ä ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ä…¥·¥Ö  ô·¥è·¥õ ·¥Ñ Ä·¥á·¥Ä·¥õ·¥è Ä's..**

‚û† **·¥Ö·¥ás…™…¢…¥·¥á·¥Ö ·¥Ä…¥·¥Ö ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á·¥Ö  ô è [·¥õ·¥á ü·¥ú…¢·¥ú ·¥Ñ·¥è·¥Ö·¥á Äs](https://t.me/tgshadow_fighters)**""", 
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "‚óÅ", callback_data="command_list")
                ]
            ]
        ),
    )


@Client.on_callback_query(filters.regex("resume_list")) 
async def resume_list(_, query: CallbackQuery): 
    await query.edit_message_text(
        f"""‚ù§  ú·¥á ü ü·¥è [{query.message.chat.first_name}](tg://user?id={query.message.chat.id}) !
‚û† **/resume ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö “ì·¥è Ä s·¥ú·¥ò·¥á Ä …¢ Ä·¥è·¥ú·¥òs “ì·¥è Ä  Ä·¥ás·¥ú·¥ç·¥á ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ·¥ò ü·¥Ä è…™…¥…¢ s·¥è…¥…¢/n·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥è…¥ ü è ·¥ç·¥Ä·¥Ö·¥á “ì·¥è Ä ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ä…¥·¥Ö  ô·¥è·¥õ ·¥Ñ Ä·¥á·¥Ä·¥õ·¥è Ä's..**

‚û† **·¥Ö·¥ás…™…¢…¥·¥á·¥Ö ·¥Ä…¥·¥Ö ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á·¥Ö  ô è [·¥õ·¥á ü·¥ú…¢·¥ú ·¥Ñ·¥è·¥Ö·¥á Äs](https://t.me/Team_shadowmusic_bot)**""", 
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "‚óÅ", callback_data="command_list")
                ]
            ]
        ),
    )


@Client.on_callback_query(filters.regex("stop_list"))
async def stop_list(_, query: CallbackQuery):
    await query.edit_message_text(
        f"""üëãüèª  ú·¥á ü ü·¥è [{query.message.chat.first_name}](tg://user?id={query.message.chat.id}) !

‚û† **/end ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö “ì·¥è Ä s·¥ú·¥ò·¥á Ä …¢ Ä·¥è·¥ú·¥òs “ì·¥è Ä ·¥á…¥·¥Ö s·¥è…¥…¢s …™…¥ ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç …¢ Ä·¥è·¥ú·¥òs/n·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥è…¥ ü è ·¥ç·¥Ä·¥Ö·¥á “ì·¥è Ä ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ä…¥·¥Ö  ô·¥è·¥õ ·¥Ñ Ä·¥á·¥Ä·¥õ·¥è Ä's..**

‚û† **·¥Ö·¥ás…™…¢…¥·¥á·¥Ö ·¥Ä…¥·¥Ö ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á·¥Ö  ô è [·¥õ·¥á ü·¥ú…¢·¥ú ·¥Ñ·¥è·¥Ö·¥á Äs](https://t.me/tgshadow_fighters)**""", 
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "‚óÅ", callback_data="command_list")
                ]
            ]
        ),
    )


@Client.on_callback_query(filters.regex("play_list"))
async def play_list(_, query: CallbackQuery):
    await query.edit_message_text(
        f"""‚ú®  ú·¥á ü ü·¥è [{query.message.chat.first_name}](tg://user?id={query.message.chat.id}) !

‚û† **/play ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö “ì·¥è Ä ·¥ò ü·¥Ä è ·¥Ä s·¥è…¥…¢s …™…¥ ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç …¢ Ä·¥è·¥ú·¥òs/n·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥è…¥ ü è ·¥ç·¥Ä·¥Ö·¥á “ì·¥è Ä ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ä…¥·¥Ö  ô·¥è·¥õ ·¥Ñ Ä·¥á·¥Ä·¥õ·¥è Ä's..\n\n vplay (·¥†…™·¥Ö·¥á·¥è)**

‚û† **·¥Ö·¥ás…™…¢…¥·¥á·¥Ö ·¥Ä…¥·¥Ö ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á·¥Ö  ô è [·¥õ·¥á ü·¥ú…¢·¥ú ·¥Ñ·¥è·¥Ö·¥á Äs](https://t.me/tgshadow_fighters)**""", 
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "‚óÅ", callback_data="command_list")
                ]
            ]
        ),
    )


@Client.on_callback_query(filters.regex("source"))
async def source(_, query: CallbackQuery): 
    await query.edit_message_text(
        f"""‚ù£Ô∏è ** ú·¥á ü ü·¥è [{query.message.chat.first_name}](tg://user?id={query.message.chat.id}) !**

‚û†  **·¥õ ú…™s …™s ·¥õ ú·¥á ·¥Ä·¥ç·¥Ä ü·¥Ä ·¥ç·¥ús…™·¥Ñ s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á “ì·¥è Ä·¥ã ·¥Ä…¥·¥Ö …¢…™·¥†·¥á ·¥Ä ‚≠ê s·¥õ·¥Ä Ä·¥õ ·¥õ·¥è  Ä·¥á·¥ò·¥è""", 
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("s·¥è·¥ú Ä·¥Ñ·¥á", url="https://github.com/Telugucoders/Amalav2.0")]]
        ),
    ) 


@Client.on_callback_query(filters.regex("info"))
async def info(_, query: CallbackQuery):
    await query.answer("information")
    await query.edit_message_text(
        f"""‚ú®  ú·¥á ü ü·¥è [{query.message.chat.first_name}](tg://user?id={query.message.chat.id}) !

‚û† ·¥õ·¥á·¥Ä·¥ç s ú·¥Ä·¥Ö·¥è·¥° …™s ·¥Ä  ô·¥è·¥õ ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á·¥Ö …™…¥ s·¥è ·¥ç·¥Ä…¥ è s·¥á Ä·¥†·¥á Ä's, …™·¥õ's ·¥è…¥ ü…™…¥·¥á s…™…¥·¥Ñ·¥á ùü∑s·¥õ ·¥ä·¥ú…¥·¥á ùü∏ùü∂ùü∏ùü∏ ·¥Ä…¥·¥Ö …™·¥õ's ·¥Ñ·¥è…¥s·¥õ·¥Ä…¥·¥õ ü è ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á·¥Ö \n
‚û† ·¥õ ú…™s  ô·¥è·¥õ ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á·¥Ö  ô è [·¥õ·¥á·¥Ä·¥ç s ú·¥Ä·¥Ö·¥è·¥°](https://t.me/tgshadow_fighters) \n 
‚û† ¬© ·¥è…¥  ô·¥á ú·¥Ä ü“ì ·¥è“ì [·¥õ·¥á ü·¥ú…¢·¥ú ·¥Ñ·¥è·¥Ö·¥á Äs](https://t.me/tgshadow_fighters)
""", 
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("üóë  ô…™…¥", callback_data="close_panel")]]
        ),
    ) 


@Client.on_callback_query(filters.regex("set_close"))
async def on_close_menu(_, query: CallbackQuery):
    a = await _.get_chat_member(query.message.chat.id, query.from_user.id)
    if not a.can_manage_voice_chats:
        return await query.answer("‚ùó ·¥è…¥ ü è ·¥Ä·¥Ö·¥ç…™…¥ ·¥°…™·¥õ ú ·¥ç·¥Ä…¥·¥Ä…¢·¥á ·¥†…™·¥Ö·¥á·¥è ·¥Ñ ú·¥Ä·¥õ ·¥ò·¥á Ä·¥ç…™ss…™·¥è…¥ ·¥õ ú·¥Ä·¥õ ·¥Ñ·¥Ä…¥ ·¥õ·¥Ä·¥ò ·¥õ ú…™s  ô·¥ú·¥õ·¥õ·¥è…¥ !", show_alert=True)
    await query.message.delete()

@Client.on_callback_query(filters.regex("close_panel"))
async def in_close_panel(_, query: CallbackQuery):
    await query.message.delete()
