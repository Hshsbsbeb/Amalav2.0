## ¬©copyright infringement on Telugu Coders


import asyncio
from time import time
from datetime import datetime
from modules.helpers.filters import command
from modules.helpers.command import commandpro
from pyrogram import Client, filters
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from modules.config import GROUP, NETWORK, BOT_USERNAME

START_TIME = datetime.utcnow()
START_TIME_ISO = START_TIME.replace(microsecond=0).isoformat()
TIME_DURATION_UNITS = (
    ('week', 60 * 60 * 24 * 7),
    ('day', 60 * 60 * 24),
    ('hour', 60 * 60),
    ('min', 60),
    ('sec', 1)
)

async def _human_time_duration(seconds):
    if seconds == 0:
        return 'inf'
    parts = []
    for unit, div in TIME_DURATION_UNITS:
        amount, seconds = divmod(int(seconds), div)
        if amount > 0:
            parts.append('{} {}{}'
                         .format(amount, unit, "" if amount == 1 else "s"))
    return ', '.join(parts)

    
   ## don't change any value in this repo if you change the value bot will crash your heroku accounts. 


@Client.on_message(command("start") & filters.private & ~filters.edited)
async def start_(client: Client, message: Message):
    await message.reply_photo(
        photo=f"https://telegra.ph/file/4963e9019e0328075e980.jpg",
        caption=f"""**üëãüèª  ú·¥á ü ü·¥è {message.from_user.mention()} …™·¥Ä·¥ç ·¥Ä ·¥õ·¥á ü·¥ú…¢·¥ú ·¥Ñ·¥è·¥Ö·¥á Äs ·¥õ ú·¥á·¥ç·¥á·¥Ö  Ä·¥è ô·¥è·¥õ …™ ·¥Ñ·¥Ä…¥ ·¥ò ü·¥Ä è ·¥ç·¥ús…™·¥Ñ …™…¥ ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç ·¥°…™·¥õ ú  ú…™…¢ ú «´·¥ú·¥Ä ü…™·¥õ è

…¢ Ä·¥è·¥ú·¥òs ·¥°…™·¥õ ú s·¥è·¥ç·¥á ·¥ús·¥á“ì·¥ú ü “ì·¥á·¥Ä·¥õ·¥ú Ä·¥ás.. ·¥Ä…¥ è  ú·¥á ü·¥ò  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ  ú…™·¥õ ·¥õ ú·¥á  ú·¥á ü·¥ò ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö /help..

·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è : [·¥õ·¥á ü·¥ú…¢·¥ú ·¥Ñ·¥è·¥Ö·¥á Äs](https://t.me/tgshadow_fighters)**
""",
    reply_markup=InlineKeyboardMarkup( [[
            InlineKeyboardButton("üìö  ú·¥á ü·¥ò & ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös", callback_data="command_list"), 
            ],[
            InlineKeyboardButton("üí¨ …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥", callback_data="info"), 
            ],[
            InlineKeyboardButton("üçÉ s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url=f"https://t.me/{GROUP}"), 
            InlineKeyboardButton("üì° ·¥Ñ ú·¥Ä…¥…¥·¥á ü", url=f"https://t.me/{NETWORK}"), 
            ],[
            InlineKeyboardButton("üçÄ ·¥Ä·¥Ö·¥Ö ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò üçÄ", url=f"https://t.me/{BOT_USERNAME}?startgroup=true")
            ]]
            ) 
        ) 
     
    
@Client.on_message(commandpro(["/alive"]) & filters.group & ~filters.edited)
async def alive(client: Client, message: Message):
    await message.reply_photo(
        photo=f"https://telegra.ph/file/4963e9019e0328075e980.jpg",
        caption=f""" ú·¥á ü ü·¥è {message.from_user.mention()} …™·¥Ä·¥ç ·¥Ä ü…™·¥†·¥á …¥·¥è·¥° üëª""",
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "…™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥ ·¥Ä ô·¥è·¥ú·¥õ ·¥ç·¥á", callback_data="info")
                ]
            ]
        ),
    )


@Client.on_message(commandpro(["/repo", "#repo"]) & filters.group & ~filters.edited)
async def repo(client: Client, message: Message):
    await message.reply_photo(
        photo=f"https://te.legra.ph/file/d65ba2c34eb7c058c1c32.jpg",
        caption=f"""·¥Ñ ú·¥á·¥Ñ·¥ã …¥·¥è·¥°üòÉ""", 
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "·¥Ñ ú·¥á·¥Ñ·¥ã …¥·¥è·¥°‚ò∫", url="https://github.com/Telugucoders/Amalamusic")
                ]
            ]
        ),
    )


@Client.on_message(command("help") & filters.private & ~filters.edited)
async def help(client: Client, message: Message):
    await message.reply_photo(
        photo=f"https://telegra.ph/file/4963e9019e0328075e980.jpg",
        caption=f""" ‚ú® ** ú·¥á ü ü·¥è {message.from_user.mention()} !**\n
‚û† **·¥õ·¥è ·¥ã…¥·¥è·¥°  ú·¥è·¥° ·¥õ·¥è s·¥á·¥õ·¥ú·¥ò ·¥õ ú…™s  ô·¥è·¥õ?  Ä·¥á·¥Ä·¥Ö s·¥á·¥õ·¥õ…™…¥…¢ ·¥ú·¥ò ·¥õ ú…™s  ô·¥è·¥õ …™…¥ …¢ Ä·¥è·¥ú·¥ò **\n
‚û† **·¥õ·¥è ·¥ã…¥·¥è·¥° ·¥ò ü·¥Ä è ·¥Ä·¥ú·¥Ö…™·¥è üîä?  Ä·¥á·¥Ä·¥Ö «´·¥ú…™·¥Ñ·¥ã ·¥ús·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös **\n
‚û† **·¥õ·¥è ·¥ã…¥·¥è·¥° ·¥á·¥†·¥á Ä è s…™…¥…¢ ü·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥è“ì  ô·¥è·¥õ?  Ä·¥á·¥Ä·¥Ö ·¥Ä ü ü ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös**\n """,
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö  ü…™s·¥õ", callback_data="command_list")
                ]
            ]
        ),
    )


@Client.on_message(command("ghelp") & filters.group & ~filters.edited)
async def gelp(client: Client, message: Message):
    await message.reply_photo(
        photo=f"https://telegra.ph/file/4963e9019e0328075e980.jpg",
        caption=f""" ‚ú® ** ú·¥á ü ü·¥è {message.from_user.mention()} !**\n
‚û† **·¥õ·¥è ·¥ã…¥·¥è·¥°  ú·¥è·¥° ·¥õ·¥è s·¥á·¥õ·¥ú·¥ò ·¥õ ú…™s  ô·¥è·¥õ?  Ä·¥á·¥Ä·¥Ö s·¥á·¥õ·¥õ…™…¥…¢ ·¥ú·¥ò ·¥õ ú…™s  ô·¥è·¥õ …™…¥ …¢ Ä·¥è·¥ú·¥ò **\n
‚û† **·¥õ·¥è ·¥ã…¥·¥è·¥° ·¥ò ü·¥Ä è ·¥Ä·¥ú·¥Ö…™·¥è üîä?  Ä·¥á·¥Ä·¥Ö «´·¥ú…™·¥Ñ·¥ã ·¥ús·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös **\n
‚û† **·¥õ·¥è ·¥ã…¥·¥è·¥° ·¥á·¥†·¥á Ä è s…™…¥…¢ ü·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥è“ì  ô·¥è·¥õ?  Ä·¥á·¥Ä·¥Ö ·¥Ä ü ü ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös**\n """,
        reply_markup=InlineKeyboardMarkup( [[
            InlineKeyboardButton("…¢·¥á…¥·¥á Ä·¥Ä ü ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös", callback_data="general_list"), 
            ],[
            InlineKeyboardButton("s·¥ã…™·¥ò", callback_data="skip_list"), 
            InlineKeyboardButton("·¥ò·¥Ä·¥ús·¥á", callback_data="pause_list"), 
            ],[
            InlineKeyboardButton(" Ä·¥ás·¥ú·¥ç·¥á", callback_data="resume_list"), 
            InlineKeyboardButton("s·¥õ·¥è·¥ò", callback_data="stop_list"), 
            ],[
            InlineKeyboardButton("·¥ò ü·¥Ä è", callback_data="play_list"), 
            InlineKeyboardButton("s·¥è·¥ú Ä·¥Ñ·¥á", callback_data="source"), 
            ],[
            InlineKeyboardButton("üóë  ô…™…¥", callback_data="set_close"), 
            ]]
            ) 
        ) 


@Client.on_message(command("uptime") & filters.group & ~filters.edited)
async def get_uptime(c: Client, message: Message):
    current_time = datetime.utcnow()
    uptime_sec = (current_time - START_TIME).total_seconds()
    uptime = await _human_time_duration(int(uptime_sec))
    await message.reply_photo(
        photo=f"https://telegra.ph/file/4963e9019e0328075e980.jpg", 
        caption=f""" üíû **·¥õ·¥á ü·¥ú…¢·¥ú ·¥Ñ·¥è·¥Ö·¥á Äs  ô·¥è·¥õ ·¥ú·¥ò·¥õ…™·¥ç·¥á**:\n
‚û† **·¥ú·¥ò·¥õ…™·¥ç·¥á:** **{uptime}**\n
‚û† **·¥ús·¥á Ä:** **{message.from_user.mention()}**\n
‚û† **s·¥õ·¥Ä Ä·¥õ ·¥õ…™·¥ç·¥á:** **{START_TIME_ISO}**\n
‚û† **·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è:** **[·¥õ·¥á ü·¥ú…¢·¥ú ·¥Ñ·¥è·¥Ö·¥á Äs](https://t.me/tgshadow_fighters)**""", 
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "üóë  ô…™…¥", callback_data="set_close")
                ]
            ]
        ),
    )
                 

@Client.on_message(command("ping") & filters.group & ~filters.edited)
async def ping_pong(c: Client, message: Message):
    start = time()
    m_reply = await message.reply_text("**·¥ò…™…¥…¢…™…¥…¢...**")
    delta_ping = time() - start
    await m_reply.edit_text("üíù **·¥ò·¥è…¥…¢!!**\n" f"üíñ **{delta_ping * 1000:.3f} ms**")
